/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarymanagementsystem;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.ListIterator;
import java.util.Objects;
import javax.swing.JOptionPane;

public class returnbooks extends javax.swing.JFrame {

    Data d = new Data();
    ObjectInputStream objectInputStream = null;
    ObjectOutputStream objectOutputStream = null;
    ArrayList<memeber> userBooks = new ArrayList();
    private memeber selectedBook;
    File userFile = null;

    public returnbooks() {
        userFile = new File(usersloginpage.LoggedInUserFullName.concat(".txt"));
        initComponents();
        d.data();
        userBooks = fetchExistingUserBooks(userFile);
        Dimension screenSize, frameSize;
        int x, y;
        screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        frameSize = getSize();
        x = (screenSize.width - frameSize.width) / 2;
        y = (screenSize.height - frameSize.height) / 2;
        setLocation(x, y);
        booktextfield.setText("BOOK ID" + "\t" + "BOOK TITLE" + "\t" + "AUTHOR" + "\t" + "PUBLISHER" + "\t" + "YEAR OF PUBLICATION" + "\t" + "ISBN" );

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        backbutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        searchtexxtfield = new javax.swing.JTextField();
        returnbutton = new javax.swing.JButton();
        booktextfield = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RETURN BOOK");

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        backbutton.setBackground(new java.awt.Color(0, 51, 51));
        backbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarymanagementsystem/left-arrow.png"))); // NOI18N
        backbutton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51), new java.awt.Color(0, 51, 51)));
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarymanagementsystem/loupe.png"))); // NOI18N
        jLabel1.setText("Search");

        searchtexxtfield.setBackground(new java.awt.Color(0, 51, 51));
        searchtexxtfield.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        searchtexxtfield.setForeground(new java.awt.Color(255, 255, 255));
        searchtexxtfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchtexxtfieldKeyReleased(evt);
            }
        });

        returnbutton.setBackground(new java.awt.Color(0, 51, 51));
        returnbutton.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        returnbutton.setForeground(new java.awt.Color(255, 255, 255));
        returnbutton.setText("Return Book");
        returnbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnbuttonActionPerformed(evt);
            }
        });

        booktextfield.setBackground(new java.awt.Color(0, 51, 51));
        booktextfield.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        booktextfield.setForeground(new java.awt.Color(255, 255, 255));

        bookTextArea.setBackground(new java.awt.Color(0, 51, 51));
        bookTextArea.setColumns(20);
        bookTextArea.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        bookTextArea.setForeground(new java.awt.Color(255, 255, 255));
        bookTextArea.setRows(5);
        jScrollPane1.setViewportView(bookTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(booktextfield, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 393, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchtexxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(returnbutton)
                                .addGap(22, 22, 22)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnbutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchtexxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(booktextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        usermanagement obj = new usermanagement();
        obj.setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_backbuttonActionPerformed
    public void saveTakenBookInLoggedInUserFile(memeber selectedBook) {

        if (Objects.nonNull(usersloginpage.LoggedInUserFullName)) {
            if (userFile.isFile()) {
                // first we will fetch all existing books of current user from his file and then we will add new book into it.
                userBooks = fetchExistingUserBooks(userFile);

                // now add taken book into current user file
                returnBook(selectedBook);
//                deleteCurrentBookInCurrentUserFile(userFile, userBooks, selectedBook);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Login Again to do any process");
//            System.out.println("Please Login Again to do any process");
        }

    }

    private void searchtexxtfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchtexxtfieldKeyReleased
      boolean found = false;
        if (d.file.isFile()) {
            ListIterator li = userBooks.listIterator();
            while (li.hasNext()) {

                memeber e = (memeber) li.next();
                if (searchtexxtfield.getText().equalsIgnoreCase(e.bookid)) {
                    try {
                        bookTextArea.setText(e.bookid + "\t" + e.booktitle + "\t" + e.author + "\t" + e.publisher + "\t" + e.yearofpublication + "\t\t" + e.isbn );
                        found = true;
                    } catch (Exception i) {
                    }

                }

            }
        }
        if (searchtexxtfield.getText().isEmpty()) {
            bookTextArea.setText("");
            return;
        }
        if (!found) {
            bookTextArea.setText("\t\t\t\tnot found");
        }
    }//GEN-LAST:event_searchtexxtfieldKeyReleased

    private void returnbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnbuttonActionPerformed
        // TODO add your handling code here:
        String selectedBooktitle = searchtexxtfield.getText(); // Assuming you have the selected book ID

        // Check if the book ID is valid and exists
        boolean found = false;
        memeber selectedBook = null;
        ListIterator<memeber> li = userBooks.listIterator();
        while (li.hasNext()) {
            memeber e = li.next();
            if (selectedBooktitle.equalsIgnoreCase(e.bookid)) {
                selectedBook = e;
                found = true;
                break;
            }
        }

        if (!found) {
            bookTextArea.setText("Book not found.");
            return;
        }

        //                                                                      Save selected Book into Cart
        returnBook(selectedBook);
    }//GEN-LAST:event_returnbuttonActionPerformed

    public ArrayList<memeber> fetchExistingUserBooks(File userFile) {
        ArrayList<memeber> existingBooks = new ArrayList<>();
        try {
            objectInputStream = new ObjectInputStream(new FileInputStream(userFile));
            existingBooks = (ArrayList<memeber>) objectInputStream.readObject();
            objectInputStream.close();
        } catch (Exception e) {

        }
        return existingBooks;
    }

    public void returnBook(memeber returnedBook) {
        boolean isBookDeleted = false;

        if (Objects.nonNull(usersloginpage.LoggedInUserFullName)) {

            ArrayList<memeber> existingUserBooks = fetchExistingUserBooks(userFile);

            isBookDeleted = existingUserBooks.removeIf(book -> book.bookid.equalsIgnoreCase(returnedBook.bookid));

            if (isBookDeleted) {
                bookTextArea.setText("Book Successfully Removed");
            } else {
                bookTextArea.setText("Issue Removing Book");
            }

            try {
                objectOutputStream = new ObjectOutputStream(new FileOutputStream(userFile));
                objectOutputStream.writeObject(existingUserBooks);
                objectOutputStream.close();

                // fetch books from data.txt // increment quantity of returned book
                for (memeber book : d.a) {
                    if (book.bookid.equalsIgnoreCase(returnedBook.bookid)) {
                        int updateNoOfCopies = Integer.parseInt(book.noofcopies);
                        updateNoOfCopies += 1;
                        book.noofcopies = String.valueOf(updateNoOfCopies);
                    }
                }

                d.oos = new ObjectOutputStream(new FileOutputStream(d.file));
                d.oos.writeObject(d.a);
                d.oos.close();

            } catch (Exception e) {

            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(returnbooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(returnbooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(returnbooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(returnbooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new returnbooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbutton;
    private javax.swing.JTextArea bookTextArea;
    private javax.swing.JTextField booktextfield;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton returnbutton;
    private javax.swing.JTextField searchtexxtfield;
    // End of variables declaration//GEN-END:variables
}
